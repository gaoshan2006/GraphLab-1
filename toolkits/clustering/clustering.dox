/**

\page clustering Clustering

This toolkit will contain implementations of clustering algorithm.

Currently the algorithms implemented are 

\li \ref clustering_kmeans "KMeans++"


\section clustering_kmeans KMeans++

The \c kmeans program implements the 
<a href="http://en.wikipedia.org/wiki/K-means%2B%2B">KMeans++</a> algorithm described 
by 

Arthur, D. and Vassilvitskii, S. (2007). "k-means++: the advantages of careful seeding". 
Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms. pp. 1027â€“1035.

It takes as input a collection of files where each line in each file represents
a data point.  Each line must contains a list of numbers, white-space or comma
separated. Each line must be the same length. 

For instance in this example input file, there are 6 datapoints, one per line,
and each datapoint is a point in a 5-dimensional space.  

\verbatim
-10.7551	6.82178	5.33455	-2.08247	2.86694	
-1.36687	10.8464	-5.28851	-4.26768	-5.50659	
-8.79834	8.01002	5.33418	0.102824	3.23318	
-8.64345	6.81946	1.2309	-4.46784	2.26341	
-8.29782	7.1154	3.32559	-2.59422	2.33936	
-8.12504	8.98924	4.15027	0.253153	1.75911	
\endverbatim

\subsection clustering_kmeans_synthetic Synthetic Data
Example synthetic data can be generated by running

\verbatim
> ./generate_synthetic [Number of Clusters] [Number of Dimensions] [Number of datapoints]
\endverbatim

This will generate a file called \c synthetic.txt , and will also output to screen
the cluster centers.

For instance:
\verbatim
> ./generate_synthetic 2 3 10
Usage: generate_synthetic [NClusters] [Dimensions] [Ndata]
Center 0 at: -6.69675	0.355189	-4.88601	
Center 1 at: 5.85919	0.0388327	5.50007	 

> cat synthetic.txt
-4.31568	-0.396959	-6.29507	
-4.56112	-1.74917	-4.57874	
4.54508	0.102845	6.35385	
4.87746	-0.832591	7.06942	
-5.91254	-0.278006	-4.25934	
6.95139	0.120139	4.89531	
-6.28538	-0.88527	-4.74988	
-6.84791	0.887664	-4.91919	
7.47117	1.67911	6.02221	
-4.78011	1.2099	-4.55519	
\endverbatim

\note Mathematically, the synthetic generator draws centers from the [-10,10]^D
uniform hypercube and draws data points by sampling uniformly from the centers,
and around a unit gaussian around each center.


\subsection clustering_kmeans_running Running KMeans
To run Kmeans clustering:
\verbatim
> ./kmeans --data=[data prefix] --cluster=[N cluster] --output-clusters=[cluster output file]
\endverbatim

All files beginning with the data prefix will be loaded. The data may be on
HDFS.  The \c --cluster option is the number of clusters to solve for.

The cluster output file must be a target accessible on the local file system.
(In the distributed case, it must be accessible from the 0th machine).
This file will contain a list of all the solved cluster centers.

For instance, running on the synthetic data above:
\verbatim
>./kmeans --data=synthetic.txt --clusters=2 --output-clusters=cluster.txt
Number of datapoints: 10
Validating data...Initializing using Kmeans++
Running Kmeans...
Kmeans iteration 1: # points with changed assignments = 0
Writing Cluster Centers...

>cat cluster.txt
-5.45046	-0.201973	-4.8929	
5.96127	0.267376	6.0852	
\endverbatim


To also output the cluster center assignments for each datapoint,
add the option:
\verbatim
--output-data=[output prefix]
\endverbatim

Tne <tt>output prefix</tt> is where the output data will be written. This
may be located on HDFS. For instance, if the <tt>output_prefix</tt> is <tt>"v_out"</tt>,
the output files will be written to:

\verbatim
v_out_1_of_16
v_out_2_of_16
...
v_out_16_of_16
\endverbatim

Each line in the output files contain firstly, the original data point, followed
$by the cluster number it was assigned to. These need not be in the same order
as the original input.

For instance, running kmeans on the example synthetic data above may produce
the following output:

\verbatim
>./kmeans --data=synthetic.txt --clusters=2 --output-clusters=cluster.txt --output-data=data.txt
Number of datapoints: 10
Validating data...Initializing using Kmeans++
Running Kmeans...
Kmeans iteration 1: # points with changed assignments = 0
Writing Cluster Centers...
Writing Data with cluster assignments...

>cat data.txt
-4.78011	1.2099	-4.55519	0
7.47117	1.67911	6.02221	1
-6.84791	0.887664	-4.91919	0
-6.28538	-0.88527	-4.74988	0
6.95139	0.120139	4.89531	1
-5.91254	-0.278006	-4.25934	0
4.87746	-0.832591	7.06942	1
4.54508	0.102845	6.35385	1
-4.56112	-1.74917	-4.57874	0
-4.31568	-0.396959	-6.29507	0
\endverbatim

This program can also run distributed by using
\verbatim
> mpiexec -n [N machines] --hostfile [host file] ./kmeans ....
\endverbatim
See your MPI documentation for details on how to launch this job.
All machines must have access to the input graph location and the output graph 
location. Graphs may be on HDFS. 
If you have problems loading HDFS files, see the \ref FAQ.


\subsection clustering_kmeans_options Options
\li \b --data (Required). The prefix from which to load the input data
\li \b --clusters (Required). The number of cluster centers to solve fo
\li \b --ncpus (Optional. Default 2) The number of processors that will be used
for computation. <b>Due to some implementation limitations within GraphLab,
   this parameter is not respected. It will use all processors on your machine
   if ran in Linux, and will use only 1 processor if ran on Mac</b> 
\li \b --output-data  (Optional) A target prefix to write the output data 
   with cluster assignments. May be on HDFS.
\li \b --output-clusters (Optional) A target location to write the cluster centers.
   Must be on the local file system.

*/


